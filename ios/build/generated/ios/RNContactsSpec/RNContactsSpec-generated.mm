/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNContactsSpec.h"


@implementation NativeContactsSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end

@implementation RCTCxxConvert (NativeContacts_SpecViewExistingContactContact)
+ (RCTManagedPointer *)JS_NativeContacts_SpecViewExistingContactContact:(id)json
{
  return facebook::react::managedPointer<JS::NativeContacts::SpecViewExistingContactContact>(json);
}
@end
namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getAll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getAll", @selector(getAll:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getAllWithoutPhotos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getAllWithoutPhotos", @selector(getAllWithoutPhotos:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getContactById(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getContactById", @selector(getContactById:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getCount(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getCount", @selector(getCount:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getPhotoForId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getPhotoForId", @selector(getPhotoForId:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_addContact(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "addContact", @selector(addContact:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_openContactForm(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "openContactForm", @selector(openContactForm:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_openExistingContact(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "openExistingContact", @selector(openExistingContact:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_viewExistingContact(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "viewExistingContact", @selector(viewExistingContact:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_editExistingContact(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "editExistingContact", @selector(editExistingContact:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_updateContact(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "updateContact", @selector(updateContact:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_deleteContact(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "deleteContact", @selector(deleteContact:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getContactsMatchingString(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getContactsMatchingString", @selector(getContactsMatchingString:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getContactsByPhoneNumber(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getContactsByPhoneNumber", @selector(getContactsByPhoneNumber:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getContactsByEmailAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getContactsByEmailAddress", @selector(getContactsByEmailAddress:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_checkPermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "checkPermission", @selector(checkPermission:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_requestPermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "requestPermission", @selector(requestPermission:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_writePhotoToPath(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "writePhotoToPath", @selector(writePhotoToPath:file:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_iosEnableNotesUsage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "iosEnableNotesUsage", @selector(iosEnableNotesUsage:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getGroups(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getGroups", @selector(getGroups:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_getGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getGroup", @selector(getGroup:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_deleteGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "deleteGroup", @selector(deleteGroup:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_updateGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "updateGroup", @selector(updateGroup:groupData:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_addGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "addGroup", @selector(addGroup:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_contactsInGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "contactsInGroup", @selector(contactsInGroup:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_addContactsToGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "addContactsToGroup", @selector(addContactsToGroup:contactIdentifiers:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeContactsSpecJSI_removeContactsFromGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "removeContactsFromGroup", @selector(removeContactsFromGroup:contactIdentifiers:resolve:reject:), args, count);
    }

  NativeContactsSpecJSI::NativeContactsSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["getAll"] = MethodMetadata {0, __hostFunction_NativeContactsSpecJSI_getAll};
        
        
        methodMap_["getAllWithoutPhotos"] = MethodMetadata {0, __hostFunction_NativeContactsSpecJSI_getAllWithoutPhotos};
        
        
        methodMap_["getContactById"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_getContactById};
        
        
        methodMap_["getCount"] = MethodMetadata {0, __hostFunction_NativeContactsSpecJSI_getCount};
        
        
        methodMap_["getPhotoForId"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_getPhotoForId};
        
        
        methodMap_["addContact"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_addContact};
        
        
        methodMap_["openContactForm"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_openContactForm};
        
        
        methodMap_["openExistingContact"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_openExistingContact};
        
        
        methodMap_["viewExistingContact"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_viewExistingContact};
        setMethodArgConversionSelector(@"viewExistingContact", 0, @"JS_NativeContacts_SpecViewExistingContactContact:");
        
        methodMap_["editExistingContact"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_editExistingContact};
        
        
        methodMap_["updateContact"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_updateContact};
        
        
        methodMap_["deleteContact"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_deleteContact};
        
        
        methodMap_["getContactsMatchingString"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_getContactsMatchingString};
        
        
        methodMap_["getContactsByPhoneNumber"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_getContactsByPhoneNumber};
        
        
        methodMap_["getContactsByEmailAddress"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_getContactsByEmailAddress};
        
        
        methodMap_["checkPermission"] = MethodMetadata {0, __hostFunction_NativeContactsSpecJSI_checkPermission};
        
        
        methodMap_["requestPermission"] = MethodMetadata {0, __hostFunction_NativeContactsSpecJSI_requestPermission};
        
        
        methodMap_["writePhotoToPath"] = MethodMetadata {2, __hostFunction_NativeContactsSpecJSI_writePhotoToPath};
        
        
        methodMap_["iosEnableNotesUsage"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_iosEnableNotesUsage};
        
        
        methodMap_["getGroups"] = MethodMetadata {0, __hostFunction_NativeContactsSpecJSI_getGroups};
        
        
        methodMap_["getGroup"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_getGroup};
        
        
        methodMap_["deleteGroup"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_deleteGroup};
        
        
        methodMap_["updateGroup"] = MethodMetadata {2, __hostFunction_NativeContactsSpecJSI_updateGroup};
        
        
        methodMap_["addGroup"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_addGroup};
        
        
        methodMap_["contactsInGroup"] = MethodMetadata {1, __hostFunction_NativeContactsSpecJSI_contactsInGroup};
        
        
        methodMap_["addContactsToGroup"] = MethodMetadata {2, __hostFunction_NativeContactsSpecJSI_addContactsToGroup};
        
        
        methodMap_["removeContactsFromGroup"] = MethodMetadata {2, __hostFunction_NativeContactsSpecJSI_removeContactsFromGroup};
        
  }
} // namespace facebook::react
