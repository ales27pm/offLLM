/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "AppSpec.h"


@implementation NativeLLMSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end

@implementation RCTCxxConvert (NativeLLM_LoadOptions)
+ (RCTManagedPointer *)JS_NativeLLM_LoadOptions:(id)json
{
  return facebook::react::managedPointer<JS::NativeLLM::LoadOptions>(json);
}
@end
@implementation RCTCxxConvert (NativeLLM_GenerateOptions)
+ (RCTManagedPointer *)JS_NativeLLM_GenerateOptions:(id)json
{
  return facebook::react::managedPointer<JS::NativeLLM::GenerateOptions>(json);
}
@end
namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_loadModel(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "loadModel", @selector(loadModel:_options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_unloadModel(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "unloadModel", @selector(unloadModel:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_generate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "generate", @selector(generate:_options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_embed(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "embed", @selector(embed:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_getPerformanceMetrics(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getPerformanceMetrics", @selector(getPerformanceMetrics:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_getKVCacheSize(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getKVCacheSize", @selector(getKVCacheSize:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_getKVCacheMaxSize(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getKVCacheMaxSize", @selector(getKVCacheMaxSize:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_clearKVCache(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "clearKVCache", @selector(clearKVCache:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_addMessageBoundary(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "addMessageBoundary", @selector(addMessageBoundary:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLLMSpecJSI_adjustPerformanceMode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "adjustPerformanceMode", @selector(adjustPerformanceMode:resolve:reject:), args, count);
    }

  NativeLLMSpecJSI::NativeLLMSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["loadModel"] = MethodMetadata {2, __hostFunction_NativeLLMSpecJSI_loadModel};
        setMethodArgConversionSelector(@"loadModel", 1, @"JS_NativeLLM_LoadOptions:");
        
        methodMap_["unloadModel"] = MethodMetadata {0, __hostFunction_NativeLLMSpecJSI_unloadModel};
        
        
        methodMap_["generate"] = MethodMetadata {2, __hostFunction_NativeLLMSpecJSI_generate};
        setMethodArgConversionSelector(@"generate", 1, @"JS_NativeLLM_GenerateOptions:");
        
        methodMap_["embed"] = MethodMetadata {1, __hostFunction_NativeLLMSpecJSI_embed};
        
        
        methodMap_["getPerformanceMetrics"] = MethodMetadata {0, __hostFunction_NativeLLMSpecJSI_getPerformanceMetrics};
        
        
        methodMap_["getKVCacheSize"] = MethodMetadata {0, __hostFunction_NativeLLMSpecJSI_getKVCacheSize};
        
        
        methodMap_["getKVCacheMaxSize"] = MethodMetadata {0, __hostFunction_NativeLLMSpecJSI_getKVCacheMaxSize};
        
        
        methodMap_["clearKVCache"] = MethodMetadata {0, __hostFunction_NativeLLMSpecJSI_clearKVCache};
        
        
        methodMap_["addMessageBoundary"] = MethodMetadata {0, __hostFunction_NativeLLMSpecJSI_addMessageBoundary};
        
        
        methodMap_["adjustPerformanceMode"] = MethodMetadata {1, __hostFunction_NativeLLMSpecJSI_adjustPerformanceMode};
        
  }
} // namespace facebook::react
