/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "AppSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_loadModel(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->loadModel(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_unloadModel(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->unloadModel(
    rt
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_generate(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->generate(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_embed(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->embed(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_getPerformanceMetrics(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->getPerformanceMetrics(
    rt
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_getKVCacheSize(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->getKVCacheSize(
    rt
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_getKVCacheMaxSize(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->getKVCacheMaxSize(
    rt
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_clearKVCache(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->clearKVCache(
    rt
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_addMessageBoundary(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->addMessageBoundary(
    rt
  );
}
static jsi::Value __hostFunction_NativeLLMCxxSpecJSI_adjustPerformanceMode(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeLLMCxxSpecJSI *>(&turboModule)->adjustPerformanceMode(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}

NativeLLMCxxSpecJSI::NativeLLMCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("LLM", jsInvoker) {
  methodMap_["loadModel"] = MethodMetadata {2, __hostFunction_NativeLLMCxxSpecJSI_loadModel};
  methodMap_["unloadModel"] = MethodMetadata {0, __hostFunction_NativeLLMCxxSpecJSI_unloadModel};
  methodMap_["generate"] = MethodMetadata {2, __hostFunction_NativeLLMCxxSpecJSI_generate};
  methodMap_["embed"] = MethodMetadata {1, __hostFunction_NativeLLMCxxSpecJSI_embed};
  methodMap_["getPerformanceMetrics"] = MethodMetadata {0, __hostFunction_NativeLLMCxxSpecJSI_getPerformanceMetrics};
  methodMap_["getKVCacheSize"] = MethodMetadata {0, __hostFunction_NativeLLMCxxSpecJSI_getKVCacheSize};
  methodMap_["getKVCacheMaxSize"] = MethodMetadata {0, __hostFunction_NativeLLMCxxSpecJSI_getKVCacheMaxSize};
  methodMap_["clearKVCache"] = MethodMetadata {0, __hostFunction_NativeLLMCxxSpecJSI_clearKVCache};
  methodMap_["addMessageBoundary"] = MethodMetadata {0, __hostFunction_NativeLLMCxxSpecJSI_addMessageBoundary};
  methodMap_["adjustPerformanceMode"] = MethodMetadata {1, __hostFunction_NativeLLMCxxSpecJSI_adjustPerformanceMode};
}


} // namespace facebook::react
