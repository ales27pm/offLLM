/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNContactsSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getAll(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getAll(
    rt
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getAllWithoutPhotos(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getAllWithoutPhotos(
    rt
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getContactById(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getContactById(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getCount(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getCount(
    rt
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getPhotoForId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getPhotoForId(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_addContact(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->addContact(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_openContactForm(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->openContactForm(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_openExistingContact(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->openExistingContact(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_viewExistingContact(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->viewExistingContact(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_editExistingContact(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->editExistingContact(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_updateContact(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->updateContact(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_deleteContact(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->deleteContact(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getContactsMatchingString(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getContactsMatchingString(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getContactsByPhoneNumber(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getContactsByPhoneNumber(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getContactsByEmailAddress(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getContactsByEmailAddress(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_checkPermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->checkPermission(
    rt
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_requestPermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->requestPermission(
    rt
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_writePhotoToPath(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->writePhotoToPath(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_iosEnableNotesUsage(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->iosEnableNotesUsage(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getGroups(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getGroups(
    rt
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_getGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->getGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_deleteGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->deleteGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_updateGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->updateGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_addGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->addGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_contactsInGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->contactsInGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_addContactsToGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->addContactsToGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asArray(rt)
  );
}
static jsi::Value __hostFunction_NativeContactsCxxSpecJSI_removeContactsFromGroup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeContactsCxxSpecJSI *>(&turboModule)->removeContactsFromGroup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asArray(rt)
  );
}

NativeContactsCxxSpecJSI::NativeContactsCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RCTContacts", jsInvoker) {
  methodMap_["getAll"] = MethodMetadata {0, __hostFunction_NativeContactsCxxSpecJSI_getAll};
  methodMap_["getAllWithoutPhotos"] = MethodMetadata {0, __hostFunction_NativeContactsCxxSpecJSI_getAllWithoutPhotos};
  methodMap_["getContactById"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_getContactById};
  methodMap_["getCount"] = MethodMetadata {0, __hostFunction_NativeContactsCxxSpecJSI_getCount};
  methodMap_["getPhotoForId"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_getPhotoForId};
  methodMap_["addContact"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_addContact};
  methodMap_["openContactForm"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_openContactForm};
  methodMap_["openExistingContact"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_openExistingContact};
  methodMap_["viewExistingContact"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_viewExistingContact};
  methodMap_["editExistingContact"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_editExistingContact};
  methodMap_["updateContact"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_updateContact};
  methodMap_["deleteContact"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_deleteContact};
  methodMap_["getContactsMatchingString"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_getContactsMatchingString};
  methodMap_["getContactsByPhoneNumber"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_getContactsByPhoneNumber};
  methodMap_["getContactsByEmailAddress"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_getContactsByEmailAddress};
  methodMap_["checkPermission"] = MethodMetadata {0, __hostFunction_NativeContactsCxxSpecJSI_checkPermission};
  methodMap_["requestPermission"] = MethodMetadata {0, __hostFunction_NativeContactsCxxSpecJSI_requestPermission};
  methodMap_["writePhotoToPath"] = MethodMetadata {2, __hostFunction_NativeContactsCxxSpecJSI_writePhotoToPath};
  methodMap_["iosEnableNotesUsage"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_iosEnableNotesUsage};
  methodMap_["getGroups"] = MethodMetadata {0, __hostFunction_NativeContactsCxxSpecJSI_getGroups};
  methodMap_["getGroup"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_getGroup};
  methodMap_["deleteGroup"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_deleteGroup};
  methodMap_["updateGroup"] = MethodMetadata {2, __hostFunction_NativeContactsCxxSpecJSI_updateGroup};
  methodMap_["addGroup"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_addGroup};
  methodMap_["contactsInGroup"] = MethodMetadata {1, __hostFunction_NativeContactsCxxSpecJSI_contactsInGroup};
  methodMap_["addContactsToGroup"] = MethodMetadata {2, __hostFunction_NativeContactsCxxSpecJSI_addContactsToGroup};
  methodMap_["removeContactsFromGroup"] = MethodMetadata {2, __hostFunction_NativeContactsCxxSpecJSI_removeContactsFromGroup};
}


} // namespace facebook::react
