name: MyOfflineLLMApp

options:
  bundleIdPrefix: com.offllm
  createIntermediateGroups: true
  minimumXcodeGenVersion: 2.40.0
  postGenCommand: bundle exec pod install

configs:
  Debug: debug
  Release: release

settings:
  base:
    # React Native 0.81.x mandates iOS 18.0+. Keep this in sync with RN's
    # minimum supported version to avoid build or CocoaPods issues.
    IPHONEOS_DEPLOYMENT_TARGET: 18.0
    SWIFT_VERSION: 5.10
    HEADER_SEARCH_PATHS: "$(inherited)"
    LIBRARY_SEARCH_PATHS: "$(inherited)"
    "EXCLUDED_ARCHS[sdk=iphonesimulator*]": "x86_64" # force arm64-only simulator builds

packages:
  MLX:
    url: https://github.com/ml-explore/mlx-swift.git
    from: 0.25.6
  MLXLibraries:
    url: https://github.com/ml-explore/mlx-swift-examples
    from: 2.25.6 # exposes the MLXLLM product

targets:
  MyOfflineLLMApp:
    type: application
    platform: iOS
    # Match the project's deployment target to React Native's minimum (18.0)
    # so generated pods do not demand a higher iOS version.
    deploymentTarget: "18.0"
    sources:
      - path: MyOfflineLLMApp
        excludes:
          - "Pods/**"
          - MLXTurboModule.mm # remove brittle ObjC++ bridge
      - path: build/generated/ios
        optional: true
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: com.offllm.myofflinellmapp
        CODE_SIGN_STYLE: Automatic
        DEVELOPMENT_TEAM: ""
        CLANG_ENABLE_MODULES: YES
        # Expose React's Objective-C types to Swift without importing
        # the React module directly.
        SWIFT_OBJC_BRIDGING_HEADER: $(SRCROOT)/MyOfflineLLMApp/MyOfflineLLMApp-Bridging-Header.h
        HEADER_SEARCH_PATHS:
          - $(inherited)
          - $(SRCROOT)/build/generated/ios
        SWIFT_INCLUDE_PATHS:
          - $(SRCROOT)/build/generated/ios
    configFiles:
      Debug:   "Pods/Target Support Files/Pods-MyOfflineLLMApp/Pods-MyOfflineLLMApp.debug.xcconfig"
      Release: "Pods/Target Support Files/Pods-MyOfflineLLMApp/Pods-MyOfflineLLMApp.release.xcconfig"
    dependencies:
      - package: MLX
        product: MLX
      - package: MLXLibraries
        product: MLXLLM
    scheme:
      testTargets: []
