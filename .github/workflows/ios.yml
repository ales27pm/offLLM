name: iOS CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      target:
        description: "Which iOS build to run"
        required: true
        type: choice
        default: turbomodules
        options:
          - turbomodules
          - unsigned
          - signed

jobs:
  turbomodules:
    if: github.event_name != 'workflow_dispatch' || inputs.target == 'turbomodules'
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ios-setup
      - name: Cache Pods
        if: ${{ hashFiles('ios/Podfile') != '' }}
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Skip Pod cache
        if: ${{ hashFiles('ios/Podfile') == '' }}
        run: echo 'No Podfile found; skipping Pod cache'
      - name: Generate Xcode project & Install Pods
        run: |
          if [ -d "ios/MyOfflineLLMApp" ] && [ -f "ios/MyOfflineLLMApp/project.yml" ]; then
              (cd ios/MyOfflineLLMApp && xcodegen generate)
              # Force project format compatible with Xcode 15
              perl -0 -i -pe 's/objectVersion = \d+/objectVersion = 56/' ios/MyOfflineLLMApp/MyOfflineLLMApp.xcodeproj/project.pbxproj

              # Clean CocoaPods caches to avoid stale CDN blobs (fixes checksum mismatch like for boost)
              pod cache clean --all || true
              rm -rf "$HOME/Library/Caches/CocoaPods" "$HOME/Library/Developer/Xcode/DerivedData" "$HOME/.cocoapods/repos" || true

              # Ensure trunk CDN is ready and specs are fresh
              pod repo add trunk https://cdn.cocoapods.org/ || true
              pod repo update

              # Patch vendored Boost podspec to match checksum
              sed -i.bak -E "s/(['\"])f0397ba6e982c4450f27bf32a2a83292aba035b827a5623a14636ea583318c41(\\1)/\\107911da8fe22fb10e3918528a8f0a5676f03c0b3b135ac19c26779f6804baebe\\1/g" \
                node_modules/react-native/third-party-podspecs/boost.podspec

              # (Optional hardening) Retry once if install fails due to network/CDN hiccups
              set -e
              ( cd ios && pod install --repo-update --verbose ) || ( sleep 5 && cd ios && pod install --repo-update --verbose )

              if [ ! -f ios/Pods/.ran_post_install ]; then
                echo 'ERROR: Pod post_install hook did not execute'
                exit 1
              fi
            else
              echo "XcodeGen spec or directory missing; skipping project generation"
            fi
      - name: Run tests
        run: npm test
      - name: Build TurboModules
        run: |
          if [ -f ios/MyOfflineLLMApp/MyOfflineLLMApp.xcworkspace/contents.xcworkspacedata ]; then
            xcodebuild \
              -workspace ios/MyOfflineLLMApp/MyOfflineLLMApp.xcworkspace \
              -scheme MyOfflineLLMApp \
              -destination 'generic/platform=iOS Simulator' \
              CODE_SIGNING_ALLOWED=NO
          else
            echo 'No Xcode workspace found; skipping build'
          fi

  unsigned:
    if: github.event_name == 'workflow_dispatch' && inputs.target == 'unsigned'
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ios-setup
      - name: Build unsigned IPA
        env:
          SCHEME: MyOfflineLLMApp
          WORKSPACE: ios/MyOfflineLLMApp.xcworkspace
          IPA_OUTPUT: ${{ runner.temp }}/MyOfflineLLMApp-unsigned.ipa
        run: |
          chmod +x scripts/build_unsigned_ios.sh
          ./scripts/build_unsigned_ios.sh
      - name: Upload unsigned IPA
        uses: actions/upload-artifact@v4
        with:
          name: MyOfflineLLMApp-unsigned
          path: ${{ runner.temp }}/MyOfflineLLMApp-unsigned.ipa

  signed:
    if: github.event_name == 'workflow_dispatch' && inputs.target == 'signed'
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ios-setup
      - name: Generate Xcode project
        working-directory: ios/MyOfflineLLMApp
        run: xcodegen generate
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/CocoaPods
            ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install CocoaPods dependencies
        working-directory: ios
        run: pod install --repo-update
      - name: Import signing certificate
        env:
          CERT_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        if: ${{ env.CERT_BASE64 != '' && env.CERT_PASSWORD != '' && env.KEYCHAIN_PASSWORD != '' }}
        run: |
          printf "%s" "$CERT_BASE64" | base64 -D > /tmp/cert.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security list-keychains -d user -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security import /tmp/cert.p12 -k build.keychain -P "$CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain
      - name: Decode provisioning profile
        env:
          PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
        run: |
          printf "%s" "$PROFILE_BASE64" | base64 -D > /tmp/profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          PROFILE_UUID=$(security cms -D -i /tmp/profile.mobileprovision | plutil -extract UUID raw -o - -)
          mv /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
      - name: Create export options plist
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.IOS_EXPORT_OPTIONS_PLIST }}
        run: |
          printf "%s" "$EXPORT_OPTIONS_PLIST" | base64 -D > exportOptions.plist
      - name: Build archive
        run: |
          xcodebuild -workspace ios/MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Release \
            -sdk iphoneos \
            -archivePath OffLLM.xcarchive \
            clean archive
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath OffLLM.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build_output
      - name: Cleanup temp keychain
        if: always()
        run: security delete-keychain build.keychain || true
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: OffLLM-ipa
          path: build_output/*.ipa
