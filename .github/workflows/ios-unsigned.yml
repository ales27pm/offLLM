name: iOS Unsigned Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-ios:
    runs-on: macos-15
    env:
      XCODE_WORKSPACE: ios/monGARS.xcworkspace
      XCODE_SCHEME: monGARS
      ARCHIVE_PATH: build/monGARS.xcarchive
      RESULT_PATH: build/monGARS.xcresult
      OUTPUT_DIR: build/output
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js (for codegen/pod install)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install npm dependencies
        run: npm ci

      - name: Install Ruby gems and XcodeGen/Pods
        run: |
          cd ios
          gem install bundler
          bundle install
          bundle exec pod install --repo-update
          cd ..

      - name: Generate iOS project (XcodeGen)
        run: |
          cd ios
          xcodegen generate
          cd ..

      - name: Build and Archive (unsigned)
        run: |
          # Clean previous artifacts
          rm -rf build
          mkdir -p $OUTPUT_DIR
          # Build archive with code signing disabled
          set -o pipefail
          xcodebuild -workspace $XCODE_WORKSPACE \
            -scheme $XCODE_SCHEME -configuration Release \
            -destination generic/platform=iOS \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO \
            -archivePath $ARCHIVE_PATH \
            -resultBundlePath $RESULT_PATH \
            clean archive | tee build-log.txt

      - name: Create Payload and IPA
        run: |
          APP_PATH="$ARCHIVE_PATH/Products/Applications/${XCODE_SCHEME}.app"
          PAYLOAD_DIR="build/Payload"
          mkdir -p "$PAYLOAD_DIR"
          cp -R "$APP_PATH" "$PAYLOAD_DIR/"
          cd build
          zip -r ../${XCODE_SCHEME}.ipa Payload
          cd ..

      - name: Package .app and logs
        run: |
          cd $ARCHIVE_PATH/Products/Applications
          zip -r ../../$OUTPUT_DIR/${XCODE_SCHEME}_app.zip "${XCODE_SCHEME}.app"
          cd ../..
          mv build-log.txt $OUTPUT_DIR/

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa
          path: |
            ${{ env.RESULT_PATH }}
            ${{ env.OUTPUT_DIR }}/${{ env.XCODE_SCHEME }}.ipa
            ${{ env.OUTPUT_DIR }}/${{ env.XCODE_SCHEME }}_app.zip
            ${{ env.OUTPUT_DIR }}/build-log.txt
