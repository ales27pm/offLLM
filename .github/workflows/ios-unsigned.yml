name: iOS unsigned build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ios:
    runs-on: macos-14

    env:
      RCT_NEW_ARCH_ENABLED: "1"
      USE_HERMES: "true"
      SCHEME: monGARS
      CONFIGURATION: Release
      BUILD_DIR: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Show Xcode
        run: |
          set -euo pipefail
          xcodebuild -version
          echo "MD_APPLE_SDK_ROOT=$(/usr/bin/xcode-select -p | sed 's#/Contents/Developer##')" >> "$GITHUB_ENV"

      - name: Setup Homebrew tools
        run: |
          set -euo pipefail
          brew update
          brew install xcodegen jq

      # --- NEW: install JS deps so Podfile can require RN scripts ---
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install JS dependencies
        run: |
          set -euo pipefail
          npm ci
          # (If you use yarn/pnpm instead, replace with the right install command)

      - name: Seed minimal XcodeGen spec (if missing)
        run: |
          set -euo pipefail
          mkdir -p ios
          if [ ! -f ios/project.yml ]; then
            echo "No ios/project.yml found — seeding a minimal XcodeGen spec."
            printf '%s\n' \
              'name: monGARS' \
              'options:' \
              '  bundleIdPrefix: com.example' \
              '  deploymentTarget:' \
              '    iOS: "18.0"' \
              'targets:' \
              '  monGARS:' \
              '    type: application' \
              '    platform: iOS' \
              '    sources:' \
              '      - path: .' \
              '        excludes:' \
              '          - ios/**/*' \
              '          - android/**/*' \
              '          - node_modules/**/*' \
              '    settings:' \
              '      PRODUCT_BUNDLE_IDENTIFIER: com.example.monGARS' \
              '      INFOPLIST_FILE: ios/Info.plist' \
              > ios/project.yml
          fi
          if [ ! -f ios/Info.plist ]; then
            printf '%s\n' \
              '<?xml version="1.0" encoding="UTF-8"?>' \
              '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' \
              '<plist version="1.0">' \
              '<dict>' \
              '  <key>CFBundleName</key><string>monGARS</string>' \
              '  <key>CFBundleIdentifier</key><string>com.example.monGARS</string>' \
              '  <key>CFBundleExecutable</key><string>$(EXECUTABLE_NAME)</string>' \
              '  <key>CFBundlePackageType</key><string>APPL</string>' \
              '  <key>UISupportedInterfaceOrientations</key>' \
              '  <array><string>UIInterfaceOrientationPortrait</string></array>' \
              '  <key>LSRequiresIPhoneOS</key><true/>' \
              '</dict>' \
              '</plist>' \
              > ios/Info.plist
          fi

      - name: Generate .xcodeproj with XcodeGen
        run: |
          set -euo pipefail
          pushd ios >/dev/null
          rm -rf monGARS.xcodeproj
          xcodegen generate --spec project.yml
          test -d monGARS.xcodeproj && echo "✅ Generated ios/monGARS.xcodeproj"
          popd >/dev/null

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: false

      - name: Install CocoaPods
        run: |
          set -euo pipefail
          gem install cocoapods -N
          cd ios
          pod repo update
          pod install --verbose

      # glog sometimes misses generated config.h; copy if needed.
      - name: Workaround glog config.h (if missing)
        run: |
          set -euo pipefail
          PRIV="ios/Pods/Headers/Private/glog/config.h"
          SRC="ios/Pods/glog/src/config.h"
          if [ -f "$PRIV" ] && [ ! -f "$SRC" ]; then
            echo "Patching glog: copying $PRIV -> $SRC"
            cp "$PRIV" "$SRC"
          fi

      - name: Build (xcodebuild)
        run: |
          set -euo pipefail
          LOG="$BUILD_DIR/xcodebuild.log"
          mkdir -p "$BUILD_DIR"
          xcodebuild \
            -workspace ios/monGARS.xcworkspace \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -destination 'generic/platform=iOS' \
            -quiet \
            clean
          xcodebuild \
            -workspace ios/monGARS.xcworkspace \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -destination 'generic/platform=iOS' \
            -derivedDataPath "$BUILD_DIR/DerivedData" \
            -quiet \
            build \
            | tee "$LOG" || true
          grep -q "** BUILD SUCCEEDED **" "$LOG" || { echo "Build failed"; exit 65; }

      - name: Package .app → .ipa (unsigned)
        run: |
          set -euo pipefail
          PRODUCTS="$BUILD_DIR/DerivedData/Build/Products/${CONFIGURATION}-iphoneos"
          APP_PATH="$PRODUCTS/${SCHEME}.app"
          OUT_DIR="$BUILD_DIR/artifacts"
          mkdir -p "$OUT_DIR/Payload"
          test -d "$APP_PATH" || { echo "App not found at $APP_PATH"; exit 1; }
          cp -R "$APP_PATH" "$OUT_DIR/Payload/"
          (cd "$OUT_DIR" && zip -qry "${SCHEME}.ipa" Payload)
          echo "IPA at $OUT_DIR/${SCHEME}.ipa"

      - name: Export xcresult summary (JSON)
        run: |
          set -euo pipefail
          XCRESULT_DIR="$(/usr/bin/find "$BUILD_DIR" -name '*.xcresult' -maxdepth 3 -print -quit || true)"
          if [ -z "$XCRESULT_DIR" ]; then
            echo "No xcresult found"; exit 0
          fi
          mkdir -p "$BUILD_DIR"
          /usr/bin/xcrun xcresulttool get --legacy --path "$XCRESULT_DIR" --format json > "$BUILD_DIR/monGARS.xcresult.json" || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-build
          path: |
            build/xcodebuild.log
            build/artifacts/monGARS.ipa
            build/monGARS.xcresult.json
          if-no-files-found: warn
