name: iOS Unsigned Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write # allow committing REPORT.md, report_agent.md
  actions: read
  checks: read

jobs:
  ios:
    runs-on: macos-15
    env:
      BUILD_DIR: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.4"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Node dependencies
        run: npm ci

      - name: Set up Ruby & Bundler (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
          working-directory: ios

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-derived-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-derived-

      - name: Install iOS tooling
        run: brew install xcodegen

      - name: Generate Xcode project
        working-directory: ios
        run: xcodegen generate

      - name: Install Pods
        working-directory: ios
        run: bundle exec pod install --repo-update
      - name: Run Robust Build Script
        run: bash build.sh
      - name: Upload unsigned IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: offLLM-unsigned-ipa
          path: ${{ env.BUILD_DIR }}/offLLM-unsigned-ipa.zip
      - name: Generate diagnosis reports
        if: always()
        run: |
          mkdir -p build
          test -f build/xcodebuild.log || (echo "(no xcodebuild.log found)" > build/xcodebuild.log)
          CODEX_LOG_PATH=build/xcodebuild.log \
          CODEX_XCRESULT_PATH=build/MyOfflineLLMApp.xcresult \
          npm run codex:analyze

      - name: Commit reports to repo
        if: always()
        run: |
          git config user.name "ci-bot"
          git config user.email "ci@example.invalid"
          mkdir -p reports
          cp -f reports/REPORT.md REPORT.md || true
          cp -f reports/report_agent.md report_agent.md || true
          git add reports/ REPORT.md report_agent.md || true
          if ! git diff --staged --quiet; then
            git commit -m "chore(ci): update iOS build reports [skip ci]"
            git push
          else
            echo "No report changes to commit."
          fi
