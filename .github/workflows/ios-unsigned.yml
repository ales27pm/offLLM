name: iOS (unsigned)

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build-ios-unsigned:
    runs-on: macos-14

    env:
      RCT_NEW_ARCH_ENABLED: "1"
      USE_HERMES: "true"
      SCHEME: monGARS
      CONFIGURATION: Release
      BUILD_DIR: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Show selected Xcode
        run: |
          set -euo pipefail
          xcodebuild -version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install JS dependencies
        run: |
          set -euo pipefail
          if [ -f yarn.lock ]; then
            corepack enable
            yarn --version
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      - name: Install XcodeGen
        run: |
          set -euo pipefail
          if ! command -v xcodegen >/dev/null 2>&1; then
            brew install xcodegen
          fi

      - name: Seed minimal iOS files (project.yml, Info.plist) if missing
        run: |
          set -euo pipefail
          node -e "
          const fs = require('fs');
          fs.mkdirSync('ios', { recursive: true });

          if (!fs.existsSync('ios/project.yml')) {
            const projectYml = [
              'name: monGARS',
              'options:',
              '  bundleIdPrefix: com.example',
              '  deploymentTarget:',
              '    iOS: \"18.0\"',
              'targets:',
              '  monGARS:',
              '    type: application',
              '    platform: iOS',
              '    sources:',
              '      - path: ..',
              '        excludes:',
              '          - ios/**/*',
              '          - android/**/*',
              '          - node_modules/**/*',
              '    settings:',
              '      PRODUCT_BUNDLE_IDENTIFIER: com.example.monGARS',
              '      INFOPLIST_FILE: ios/Info.plist',
              ''
            ].join('\\n');
            fs.writeFileSync('ios/project.yml', projectYml);
          }

          if (!fs.existsSync('ios/Info.plist')) {
            const plist = [
              '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',
              '<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">',
              '<plist version=\"1.0\">',
              '<dict>',
              '  <key>CFBundleName</key><string>monGARS</string>',
              '  <key>CFBundleIdentifier</key><string>com.example.monGARS</string>',
              '  <key>CFBundleExecutable</key><string>$(EXECUTABLE_NAME)</string>',
              '  <key>CFBundlePackageType</key><string>APPL</string>',
              '  <key>UISupportedInterfaceOrientations</key>',
              '  <array><string>UIInterfaceOrientationPortrait</string></array>',
              '  <key>LSRequiresIPhoneOS</key><true/>',
              '</dict>',
              '</plist>',
              ''
            ].join('\\n');
            fs.writeFileSync('ios/Info.plist', plist);
          }
          "

      - name: Generate .xcodeproj
        run: |
          set -euo pipefail
          xcodegen generate --spec ios/project.yml --project ios/monGARS.xcodeproj

      - name: Install CocoaPods
        run: |
          set -euo pipefail
          gem install cocoapods -N
          cd ios
          pod install --repo-update --verbose

      - name: Build (unsigned) and package IPA
        run: |
          set -euo pipefail

          rm -rf "${BUILD_DIR}"
          mkdir -p "${BUILD_DIR}"

          xcodebuild \
            -workspace ios/monGARS.xcworkspace \
            -scheme "${SCHEME}" \
            -configuration "${CONFIGURATION}" \
            -sdk iphoneos \
            -derivedDataPath "${BUILD_DIR}/DerivedData" \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            | tee "${BUILD_DIR}/xcodebuild.log"

          APP_PRODUCTS="${BUILD_DIR}/DerivedData/Build/Products/${CONFIGURATION}-iphoneos"
          APP_PATH="${APP_PRODUCTS}/${SCHEME}.app"

          if [ ! -d "${APP_PATH}" ]; then
            echo "App not found at ${APP_PATH}"
            exit 65
          fi

          mkdir -p "${BUILD_DIR}/Payload"
          cp -R "${APP_PATH}" "${BUILD_DIR}/Payload/"
          (cd "${BUILD_DIR}" && /usr/bin/zip -qry "${SCHEME}-unsigned.ipa" Payload)

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ipa-unsigned
          path: "build/monGARS-unsigned.ipa"
          if-no-files-found: error
          retention-days: 7

      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-log
          path: "build/xcodebuild.log"
          if-no-files-found: warn
          retention-days: 7

      - name: Upload products (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: "products-${{ env.CONFIGURATION }}-iphoneos"
          path: "build/DerivedData/Build/Products/${{ env.CONFIGURATION }}-iphoneos/**"
          if-no-files-found: warn
          retention-days: 7