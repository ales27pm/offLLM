name: iOS CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-ios:
    runs-on: macos-14

    env:
      DEVELOPER_DIR: /Applications/Xcode_16.2.app/Contents/Developer
      XCODE_SCHEME: monGARS
      DERIVED_DATA: build/DerivedData

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.19.4"
          cache: npm

      - name: Cache node_modules/Pods
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}-node-${{ hashFiles('package-lock.json','yarn.lock','pnpm-lock.yaml') }}

      - name: Install JS deps
        run: |
          set -euo pipefail
          corepack enable || true
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Install XcodeGen
        run: |
          if ! command -v xcodegen >/dev/null; then
            brew install xcodegen
          fi

      - name: Generate Xcode project
        working-directory: ios
        run: |
          set -euo pipefail
          xcodegen generate

      - name: Verify project presence
        run: |
          set -euo pipefail
          FOUND="$(/bin/ls -d ios/*.xcodeproj 2>/dev/null | head -n1 || true)"
          if [ -z "${FOUND}" ]; then
            echo "::error title=Missing Xcode project::No .xcodeproj found under ios/. Commit XcodeGen inputs and rerun."
            exit 1
          fi
          NAME="$(basename "${FOUND}" .xcodeproj)"
          echo "XCODE_PROJECT_PATH=${FOUND}" >> "$GITHUB_ENV"
          echo "XCODE_PROJECT_NAME=${NAME}" >> "$GITHUB_ENV"
          echo "Expect CocoaPods to generate workspace: ios/${NAME}.xcworkspace"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: false

      - name: Install CocoaPods
        working-directory: ios
        run: |
          set -euo pipefail
          if [ -f ../Gemfile ]; then
            bundle install --path vendor/bundle
            bundle exec pod install --repo-update
          else
            pod install --repo-update
          fi

      - name: Post-install hardening (Pods & App projects)
        if: always()
        run: |
          set -euo pipefail
          ruby scripts/ci/post_install_hardening_hook.rb || true

      - name: Install xcbeautify (pretty xcodebuild output)
        run: |
          set -euo pipefail
          brew install xcbeautify || true

      - name: Build (Release, iphoneos, deterministic DerivedData)
        env:
          XCODE_WORKSPACE: ios/${{ env.XCODE_PROJECT_NAME }}.xcworkspace
        run: |
          set -euo pipefail
          xcodebuild \
            -resolvePackageDependencies \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -arch arm64 \
            -derivedDataPath "$DERIVED_DATA" \
            -resultBundlePath "$DERIVED_DATA/ResultBundle.xcresult" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            PROVISIONING_PROFILE_SPECIFIER="" \
            SKIP_INSTALL=NO \
            BUILD_LIBRARY_FOR_DISTRIBUTION=NO \
            "OTHER_CFLAGS=-DOBJC_OLD_DISPATCH_PROTOTYPES=0" \
          | xcbeautify

      - name: Package unsigned IPA from Release-iphoneos
        run: |
          set -euo pipefail
          APP_DIR="$DERIVED_DATA/Build/Products/Release-iphoneos"
          APP_PATH="$(/bin/ls -d "$APP_DIR"/*.app 2>/dev/null | head -n1 || true)"
          if [ -z "$APP_PATH" ]; then
            echo "::error title=App not found::No .app under $APP_DIR (build must have failed earlier)."
            exit 1
          fi
          mkdir -p build
          cd build
          rm -rf Payload
          mkdir -p Payload
          cp -R "$APP_PATH" Payload/
          /usr/bin/zip -qry offLLM-unsigned.ipa Payload
          /usr/bin/zip -qry "$(basename "$APP_PATH").zip" "$APP_PATH"

      - name: Upload unsigned IPA, app & logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa
          path: |
            build/offLLM-unsigned.ipa
            build/*.app.zip
            ${{ env.DERIVED_DATA }}/ResultBundle.xcresult
            ${{ env.DERIVED_DATA }}/Logs/Build
          if-no-files-found: error
          compression-level: 6
