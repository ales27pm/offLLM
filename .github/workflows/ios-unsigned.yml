name: iOS Unsigned Build (monGARS)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ios-unsigned-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-unsigned:
    runs-on: macos-15
    env:
      RCT_NEW_ARCH_ENABLED: "1"
      USE_HERMES: "true"
      SCHEME: "monGARS"
      CONFIGURATION: "Release"
      BUILD_DIR: build
      TEAM_NAME: "27pm"
      PROJECT_NAME: "monGARS"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show installed Xcodes
        run: ls -1 /Applications | sed -n 's/^Xcode.*/&/p'

      - name: Select Xcode 16.4 (attempt)
        id: xcode164
        continue-on-error: true
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.4"

      - name: Select Xcode 16.2 (fallback)
        if: ${{ steps.xcode164.outcome == 'failure' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Confirm Xcode
        id: xcodever
        shell: bash
        run: |
          set -e
          xcodebuild -version
          SEL="$(xcodebuild -version | head -n1 | awk '{print $2}')"
          echo "xcode=$SEL" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install JS deps
        run: npm ci

      - name: Install Homebrew deps
        run: brew install xcodegen

      - name: Seed minimal XcodeGen spec if missing
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f ios/project.yml ]; then
            echo "No ios/project.yml found â€” seeding a minimal XcodeGen spec."
            mkdir -p ios
            cat > ios/project.yml <<'YML'
            name: monGARS
            options:
              bundleIdPrefix: com.example
              deploymentTarget:
                iOS: "18.0"
            targets:
              monGARS:
                type: application
                platform: iOS
                sources:
                  - path: .
                    excludes:
                      - ios/**/*
                      - android/**/*
                      - node_modules/**/*
                settings:
                  PRODUCT_BUNDLE_IDENTIFIER: com.example.monGARS
                  INFOPLIST_FILE: ios/Info.plist
            YML
            if [ ! -f ios/Info.plist ]; then
              cat > ios/Info.plist <<'PLIST'
              <?xml version="1.0" encoding="UTF-8"?>
              <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
              <plist version="1.0">
              <dict>
                <key>CFBundleName</key><string>monGARS</string>
                <key>CFBundleIdentifier</key><string>com.example.monGARS</string>
                <key>CFBundleExecutable</key><string>$(EXECUTABLE_NAME)</string>
                <key>CFBundlePackageType</key><string>APPL</string>
                <key>UISupportedInterfaceOrientations</key>
                <array><string>UIInterfaceOrientationPortrait</string></array>
                <key>LSRequiresIPhoneOS</key><true/>
              </dict>
              </plist>
              PLIST
            fi
          fi

      - name: Generate .xcodeproj with XcodeGen
        working-directory: ios
        run: xcodegen generate

      - name: Verify project
        run: |
          if [ ! -d ios/monGARS.xcodeproj ] && [ ! -d ios/monGARS.xcworkspace ]; then
            echo "Xcode project not generated"
            ls -la ios || true
            exit 1
          fi

      - name: Setup Ruby (CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
          working-directory: ios

      - name: Install Pods
        working-directory: ios
        run: |
          bundle install --path vendor/bundle
          bundle exec pod repo update
          bundle exec pod install

      - name: Bootstrap, build, and package (single script)
        id: buildstep
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$BUILD_DIR"

          # Clean DerivedData to avoid stale search paths
          rm -rf "$BUILD_DIR/DerivedData"

          # Build
          set +e
          xcodebuild \
            -workspace ios/monGARS.xcworkspace \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath "$BUILD_DIR/DerivedData" \
            -resultBundlePath "$BUILD_DIR/$SCHEME.xcresult" \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            | tee "$BUILD_DIR/xcodebuild.log"
          STATUS=${PIPESTATUS[0]}
          set -e

          # Package unsigned IPA if .app exists
          APP_DIR="$BUILD_DIR/DerivedData/Build/Products/${CONFIGURATION}-iphoneos"
          APP_PATH="$APP_DIR/$SCHEME.app"
          if [ -d "$APP_PATH" ]; then
            rm -rf "$BUILD_DIR/Payload"
            mkdir -p "$BUILD_DIR/Payload"
            cp -R "$APP_PATH" "$BUILD_DIR/Payload/"
            (cd "$BUILD_DIR" && zip -qry offLLM-unsigned.ipa Payload)
            (cd "$APP_DIR" && zip -qry "$PWD/../../$SCHEME.app.zip" "$SCHEME.app")
          fi

          # Export a JSON summary of the xcresult if available
          if command -v xcrun >/dev/null 2>&1 && [ -d "$BUILD_DIR/$SCHEME.xcresult" ]; then
            xcrun xcresulttool get --format json --path "$BUILD_DIR/$SCHEME.xcresult" > "$BUILD_DIR/$SCHEME.xcresult.json" || true
          fi

          # Expose status to later steps
          echo "status=$STATUS" >> "$GITHUB_OUTPUT"
          exit "$STATUS"

      - name: Upload IPA
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa-xcode-${{ steps.xcodever.outputs.xcode }}-attempt-${{ github.run_attempt }}
          path: |
            build/offLLM-unsigned.ipa
            build/monGARS.app.zip
          if-no-files-found: ignore
          overwrite: true

      - name: Upload logs & xcresult
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-reports-xcode-${{ steps.xcodever.outputs.xcode }}-attempt-${{ github.run_attempt }}
          path: |
            build/xcodebuild.log
            build/monGARS.xcresult
            build/monGARS.xcresult.json
          if-no-files-found: ignore
          overwrite: true
