name: iOS (unsigned)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sim-build:
    name: Simulator build (iPhone 16 Pro / iOS 18)
    runs-on: macos-15
    env:
      NODE_OPTIONS: --max_old_space_size=4096
      RCT_NEW_ARCH_ENABLED: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION || '20' }}
          cache: 'npm'
      - name: Install Node deps
        run: npm ci
      - name: Cache Bundler
        uses: actions/cache@v4
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('ios/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-bundler-
      - name: Bundle config path
        working-directory: ios
        run: bundle config set path vendor/bundle
      - name: Bundle install
        working-directory: ios
        run: bundle install
      - name: Generate Xcode project (XcodeGen auto-discover)
        shell: bash
        run: |
          set -euo pipefail
          SPEC="$(/usr/bin/find ios -maxdepth 2 -name project.yml -print -quit || true)"
          if [[ -n "${SPEC}" ]]; then
            echo "🛠  Found XcodeGen spec at: ${SPEC}"
            pushd "$(dirname "${SPEC}")"
            xcodegen generate
            popd
          else
            echo "ℹ️  No XcodeGen project.yml found; skipping"
          fi
      - name: Clean CocoaPods sandbox if stale
        working-directory: ios
        run: |
          set -euo pipefail
          rm -f Pods/Manifest.lock
          rm -rf Pods/Headers || true
      - name: Install Pods (bundler)
        working-directory: ios
        run: bundle exec pod install --repo-update
      - name: Build (Simulator)
        shell: bash
        run: |
          set -euo pipefail
          xcodebuild \
            -workspace ios/MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
            clean build | xcpretty

  unsigned-ipa:
    name: Unsigned device IPA (Release, no codesign)
    runs-on: macos-15
    env:
      NODE_OPTIONS: --max_old_space_size=4096
      RCT_NEW_ARCH_ENABLED: 1
      SCHEME: MyOfflineLLMApp
      WORKSPACE: ios/MyOfflineLLMApp.xcworkspace
      CONFIGURATION: Release
      BUILD_DIR: build
    steps:
      - uses: actions/checkout@v4
      # Node / Ruby / Bundler steps same as sim-build (keep them in sync)
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION || '20' }}
          cache: 'npm'
      - name: Install Node deps
        run: npm ci
      - name: Cache Bundler
        uses: actions/cache@v4
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('ios/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-bundler-
      - name: Bundle config path
        working-directory: ios
        run: bundle config set path vendor/bundle
      - name: Bundle install
        working-directory: ios
        run: bundle install
      - name: Generate Xcode project (XcodeGen auto-discover)
        shell: bash
        run: |
          set -euo pipefail
          SPEC="$(/usr/bin/find ios -maxdepth 2 -name project.yml -print -quit || true)"
          if [[ -n "${SPEC}" ]]; then
            echo "🛠  Found XcodeGen spec at: ${SPEC}"
            pushd "$(dirname "${SPEC}")"
            xcodegen generate
            popd
          else
            echo "ℹ️  No XcodeGen project.yml found; skipping"
          fi
      - name: Clean CocoaPods sandbox if stale
        working-directory: ios
        run: |
          set -euo pipefail
          rm -f Pods/Manifest.lock
          rm -rf Pods/Headers || true
      - name: Install Pods (bundler)
        working-directory: ios
        run: bundle exec pod install --repo-update
      - name: Build device .app (no code signing)
        shell: bash
        run: |
          set -euo pipefail
          # Build a Release-iphoneos device app without code signing
          xcodebuild \
            -workspace "${WORKSPACE}" \
            -scheme "${SCHEME}" \
            -configuration "${CONFIGURATION}" \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_IDENTITY="" \
            clean build \
            BUILD_DIR="${BUILD_DIR}" \
            | xcpretty
      - name: Locate built .app and dSYMs
        id: locate
        shell: bash
        run: |
          set -euo pipefail
          APP_PATH="$(/usr/bin/find "${BUILD_DIR}/Build/Products/${CONFIGURATION}-iphoneos" -maxdepth 1 -name '*.app' -print -quit)"
          if [[ -z "${APP_PATH}" ]]; then
            echo "::error::Could not find built .app in ${BUILD_DIR}/Build/Products/${CONFIGURATION}-iphoneos"
            ls -la "${BUILD_DIR}/Build/Products/${CONFIGURATION}-iphoneos" || true
            exit 1
          fi
          echo "app_path=${APP_PATH}" >> "$GITHUB_OUTPUT"

          DSYM_DIR="${BUILD_DIR}/Build/Products/${CONFIGURATION}-iphoneos"
          DSYM_ZIP="${BUILD_DIR}/MyOfflineLLMApp.dSYMs.zip"
          if compgen -G "${DSYM_DIR}/*.dSYM" > /dev/null; then
            /usr/bin/zip -qry "${DSYM_ZIP}" "${DSYM_DIR}"/*.dSYM
            echo "dsym_zip=${DSYM_ZIP}" >> "$GITHUB_OUTPUT"
          else
            echo "dsym_zip=" >> "$GITHUB_OUTPUT"
          fi
      - name: Create unsigned IPA
        shell: bash
        run: |
          set -euo pipefail
          APP_PATH="${{ steps.locate.outputs.app_path }}"
          IPA_DIR="${BUILD_DIR}/ipa"
          PAYLOAD_DIR="${IPA_DIR}/Payload"
          mkdir -p "${PAYLOAD_DIR}"
          /bin/cp -R "${APP_PATH}" "${PAYLOAD_DIR}/"
          (cd "${IPA_DIR}" && /usr/bin/zip -qry "MyOfflineLLMApp-unsigned.ipa" "Payload")
          echo "IPA=${IPA_DIR}/MyOfflineLLMApp-unsigned.ipa"
          ls -la "${IPA_DIR}"
      - name: Upload unsigned IPA
        uses: actions/upload-artifact@v4
        with:
          name: MyOfflineLLMApp-unsigned-ipa
          path: build/ipa/MyOfflineLLMApp-unsigned.ipa
          if-no-files-found: error
      - name: Upload dSYMs (if any)
        if: ${{ steps.locate.outputs.dsym_zip != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: MyOfflineLLMApp-dSYMs
          path: ${{ steps.locate.outputs.dsym_zip }}
          if-no-files-found: warn
