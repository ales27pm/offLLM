name: iOS Unsigned Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-latest  # macOS runner with Xcode 14.x (iOS 16.4 SDK)
    timeout-minutes: 60
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Ruby (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'     # Use appropriate Ruby version for bundler
          bundler-cache: true

      - name: Install Bundler
        run: gem install bundler

      - name: Install CocoaPods and XcodeGen
        run: |
          bundle install   # Install CocoaPods (and any other gems) from Gemfile
          brew install xcodegen

      - name: Generate Xcode project with XcodeGen
        if: ${{ exists('ios/project.yml') }}
        run: |
          cd ios
          xcodegen generate
          echo "✅ Xcode project generated via XcodeGen."

      - name: Install iOS Pods
        working-directory: ios
        run: |
          bundle exec pod install --repo-update
        env:
          CP_SKIP_XCODE_VERSION_CHECK: 1   # (Skip CocoaPods Xcode version warning if necessary)

      # (Optional) Verify Hermes phase removal - ensure no forbidden script remains
      - name: Verify No Hermes Script Phase
        run: |
          ! grep -R "Replace Hermes" ios/Pods ios/*.xcodeproj || (echo "❌ Forbidden Hermes script phase still present!" && exit 1)
      - name: Build iOS (Release, Unsigned, Device)
        env:
          SCHEME: MyOfflineLLMApp
          CONFIGURATION: Release
        run: |
          xcodebuild -workspace ios/"${SCHEME}.xcworkspace" \
                     -scheme "${SCHEME}" -configuration "${CONFIGURATION}" \
                     -sdk iphoneos -destination 'generic/platform=iOS' \
                     -derivedDataPath ios/build/DerivedData \
                     CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
                     build | tee ios/build/xcodebuild.log
          echo "✅ Xcode build completed."

      - name: Package Unsigned IPA
        run: |
          cd ios
          BUILD_DIR="build"
          # Path to the built .app (from DerivedData products)
          APP_PATH="$BUILD_DIR/DerivedData/Build/Products/Release-iphoneos/MyOfflineLLMApp.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "❌ Error: App not found at $APP_PATH"
            echo "Contents of DerivedData/Build/Products:" && ls "$BUILD_DIR/DerivedData/Build/Products"
            exit 1
          fi
          # Create Payload folder and copy .app
          mkdir -p "$BUILD_DIR/Payload"
          cp -R "$APP_PATH" "$BUILD_DIR/Payload/"
          # Remove any signing info to truly unsign the app
          rm -rf "$BUILD_DIR/Payload/MyOfflineLLMApp.app/_CodeSignature" \
                 "$BUILD_DIR/Payload/MyOfflineLLMApp.app/embedded.mobileprovision"
          # Zip the Payload into an .ipa file
          cd "$BUILD_DIR"
          zip -qry "MyOfflineLLMApp-unsigned.ipa" Payload
          rm -rf Payload
          echo "✅ Unsigned IPA packaged at ios/$BUILD_DIR/MyOfflineLLMApp-unsigned.ipa"

      - name: Upload Unsigned IPA Artifact
        uses: actions/upload-artifact@v3
        with:
          name: MyOfflineLLMApp-unsigned-ipa
          path: ios/build/MyOfflineLLMApp-unsigned.ipa