name: iOS Unsigned (Xcode 16.2)

on:
  push:
    branches: [ main, master ]
  pull_request:

env:
  RCT_NEW_ARCH_ENABLED: "1"
  USE_HERMES: "true"
  SCHEME: "monGARS"
  CONFIGURATION: "Release"
  BUILD_DIR: "build"

jobs:
  ios:
    runs-on: macos-14
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Print Xcode version
        run: |
          set -euo pipefail
          xcodebuild -version
          echo "DEVELOPER_DIR=$DEVELOPER_DIR" >> "$GITHUB_ENV"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install JS deps
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Seed minimal XcodeGen spec + Info.plist (if missing)
        run: |
          set -euo pipefail
          node -e "
            const fs = require('fs');
            fs.mkdirSync('ios', { recursive: true });
            if (!fs.existsSync('ios/project.yml')) {
              fs.writeFileSync('ios/project.yml', [
                'name: monGARS',
                'options:',
                '  bundleIdPrefix: com.example',
                '  deploymentTarget:',
                '    iOS: \"18.0\"',
                'targets:',
                '  monGARS:',
                '    type: application',
                '    platform: iOS',
                '    sources:',
                '      - path: .',
                '        excludes:',
                '          - ios/**/*',
                '          - android/**/*',
                '          - node_modules/**/*',
                '    settings:',
                '      PRODUCT_BUNDLE_IDENTIFIER: com.example.monGARS',
                '      INFOPLIST_FILE: ios/Info.plist',
                ''
              ].join('\\n'));
              console.log('Seeded ios/project.yml');
            }
            if (!fs.existsSync('ios/Info.plist')) {
              fs.writeFileSync('ios/Info.plist', [
                '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',
                '<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">',
                '<plist version=\"1.0\">',
                '<dict>',
                '  <key>CFBundleName</key><string>monGARS</string>',
                '  <key>CFBundleIdentifier</key><string>com.example.monGARS</string>',
                '  <key>CFBundleExecutable</key><string>$(EXECUTABLE_NAME)</string>',
                '  <key>CFBundlePackageType</key><string>APPL</string>',
                '  <key>UISupportedInterfaceOrientations</key>',
                '  <array><string>UIInterfaceOrientationPortrait</string></array>',
                '  <key>LSRequiresIPhoneOS</key><true/>',
                '</dict>',
                '</plist>',
                ''
              ].join('\\n'));
              console.log('Seeded ios/Info.plist');
            }
          "

      - name: Install CocoaPods
        run: |
          set -euo pipefail
          gem install cocoapods -N
          cd ios
          pod repo update
          pod install --verbose

      # Create an xcconfig that prioritizes libc++ headers to avoid the <cstdint>/<stdint.h> error.
      - name: Create CI xcconfig to fix libc++ include order
        run: |
          set -euo pipefail
          mkdir -p ios
          cat > ios/CIOverrides.xcconfig <<'XC'
          // Ensure C++ stdlib headers take precedence
          HEADER_SEARCH_PATHS = $(SDKROOT)/usr/include/c++/v1 $(inherited)
          SYSTEM_HEADER_SEARCH_PATHS = $(inherited)
          // Keep warnings as-is
          XC

      - name: Build (unsigned, generic iOS device)
        run: |
          set -euo pipefail
          mkdir -p "$BUILD_DIR"
          if [ -d ios/Pods ]; then
            WORK_ARG="-workspace ios/monGARS.xcworkspace"
          else
            WORK_ARG="-project ios/monGARS.xcodeproj"
          fi

          xcodebuild \
            ${WORK_ARG} \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -destination "generic/platform=iOS" \
            -derivedDataPath "$BUILD_DIR/DerivedData" \
            -resultBundlePath "$BUILD_DIR/monGARS.xcresult" \
            -xcconfig ios/CIOverrides.xcconfig \
            -allowProvisioningUpdates \
            -UseModernBuildSystem=YES \
            build \
            2>&1 | tee "$BUILD_DIR/xcodebuild.log"

      - name: Export xcresult JSON (Xcode 16 requires --legacy)
        if: always()
        run: |
          set -euo pipefail
          if [ -d "$BUILD_DIR/monGARS.xcresult" ]; then
            xcrun xcresulttool get object --legacy \
              --path "$BUILD_DIR/monGARS.xcresult" \
              --format json > "$BUILD_DIR/monGARS.xcresult.json" || true
          fi

      - name: Zip unsigned .app (optional)
        if: always()
        run: |
          set -euo pipefail
          APP_PRODUCTS="$BUILD_DIR/DerivedData/Build/Products/${CONFIGURATION}-iphoneos"
          if [ -d "$APP_PRODUCTS/${SCHEME}.app" ]; then
            (cd "$APP_PRODUCTS" && /usr/bin/zip -qry "$PWD/../../${SCHEME}.app.zip" "${SCHEME}.app")
          fi
          ls -al "$BUILD_DIR" || true
          ls -al "$BUILD_DIR/DerivedData/Build/Products" || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-xcode-16_2
          path: |
            build/**
          if-no-files-found: warn