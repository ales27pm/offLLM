name: iOS (unsigned) â€” Simulator .app

on:
  push: { branches: [main] }
  pull_request:

concurrency:
  group: ios-unsigned-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ios:
    runs-on: macos-14
    env:
      NODE_OPTIONS: --max_old_space_size=4096
      RCT_NEW_ARCH_ENABLED: 1

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install JS deps
        run: npm run ci:install

      - name: Run tests
        run: npm test

      - name: Select Xcode 16.1
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ios

      - name: Generate Xcode project
        working-directory: ios
        run: |
          brew install xcodegen || true
          xcodegen generate
          bundle install

      - name: Run codegen
        run: npm run codegen

      - name: Install Pods
        working-directory: ios
        run: bundle exec pod install --repo-update

      - name: Build (unsigned, Simulator)
        working-directory: ios
        run: |
          set -euo pipefail
          RESULT_BUNDLE=MyOfflineLLMApp.xcresult
          xcodebuild -workspace MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Release \
            -sdk iphonesimulator -arch arm64 \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            -derivedDataPath build \
            -resultBundlePath "$RESULT_BUNDLE" \
            | tee xcodebuild.log

          APP_PATH="build/Build/Products/Release-iphonesimulator/MyOfflineLLMApp.app"
          ditto -ck --sequesterRsrc --keepParent "$APP_PATH" MyOfflineLLMApp-Simulator.zip

          xcrun xcresulttool get --path "$RESULT_BUNDLE" --format json \
            | jq '.issues.testFailureSummaries + .issues.warningSummaries | length'

      - name: Print Xcode errors (if build failed)
        if: failure()
        working-directory: ios
        run: |
          echo "===== last 400 lines of xcodebuild.log ====="
          tail -n 400 xcodebuild.log || true
          if [ -d "MyOfflineLLMApp.xcresult" ]; then
            echo "===== parsed issues from xcresult ====="
            xcrun xcresulttool get --path MyOfflineLLMApp.xcresult --format json \
              | jq -r '[.issues.errorSummaries[]? | { message: .message?.text, target: .target?.name, file: .documentLocationInCreatingWorkspace?.url }]' || true
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: MyOfflineLLMApp-Simulator
          path: ios/MyOfflineLLMApp-Simulator.zip
