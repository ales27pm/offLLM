name: Build OffLLM iOS App

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install npm dependencies
        run: npm install

      - name: Install XcodeGen
        run: brew install xcodegen

      - name: Generate Xcode project
        working-directory: ios/MyOfflineLLMApp
        run: xcodegen generate

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('ios/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby gems
        working-directory: ios
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/CocoaPods
            ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        working-directory: ios
        run: bundle exec pod install

      - name: Decode and import signing certificate
        env:
          CERT_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        run: |
          printf "%s" "$CERT_BASE64" | base64 -D > /tmp/cert.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security list-keychains -d user -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security import /tmp/cert.p12 -k build.keychain -P "$CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain

      - name: Decode provisioning profile
        env:
          PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
        run: |
          printf "%s" "$PROFILE_BASE64" | base64 -D > /tmp/profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mv /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Create export options plist
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.IOS_EXPORT_OPTIONS_PLIST }}
        run: |
          printf "%s" "$EXPORT_OPTIONS_PLIST" | base64 -D > exportOptions.plist

      - name: Build archive
        run: |
          xcodebuild -workspace ios/MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Release \
            -sdk iphoneos \
            -archivePath OffLLM.xcarchive \
            clean archive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath OffLLM.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build_output

      - name: Clean up keychain
        if: always()
        run: security delete-keychain build.keychain

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: OffLLM-ipa
          path: build_output/*.ipa
