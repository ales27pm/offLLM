name: iOS Build (Verify RN Versions)

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  ios:
    name: Build iOS (Xcode 16.4)
    runs-on: macos-15

    env:
      CODE_SIGNING_ALLOWED: "NO"
      CODE_SIGNING_REQUIRED: "NO"
      USE_FLIPPER: "0"
      WORKSPACE: monGARS.xcworkspace
      SCHEME: monGARS
      CONFIGURATION: Release
      SDK: iphoneos
      DERIVED_DATA: ${{ github.workspace }}/build/DerivedData

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.4
        run: |
          sudo xcode-select -s "/Applications/Xcode_16.4.app/Contents/Developer"
          xcodebuild -version

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install JS deps
        run: |
          npm ci

      - name: Set up Ruby (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install xcpretty
        run: |
          gem install xcpretty

      - name: Install XcodeGen
        run: |
          brew install xcodegen

      - name: Generate Xcode project (idempotent)
        run: |
          xcodegen generate || true

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods (fresh if lock changed)
        id: install_pods
        working-directory: ios
        run: |
          bundle exec pod deintegrate || true
          rm -rf Pods Podfile.lock
          bundle exec pod repo update
          bundle exec pod install --repo-update

      - name: Run iOS configuration verifiers
        uses: ./.github/actions/verify-ios-config

      - name: Upload CocoaPods artifacts
        if: steps.install_pods.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ios-pods-build
          path: |
            ios/Pods
            ios/monGARS.xcworkspace
            ios/Podfile.lock
          if-no-files-found: error

      - name: Clean caches (global + repo-local) and set fresh module cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Caches/com.apple.dt.Xcode
          rm -rf build/DerivedData
          rm -rf build/DerivedData/ModuleCache.noindex
          rm -rf build/DerivedData/Build/Intermediates.noindex/ArchiveIntermediates
          rm -rf build/DerivedData/Build/Intermediates.noindex/PrecompiledHeaders
          MODULE_CACHE_DIR="$(mktemp -d)"
          echo "MODULE_CACHE_DIR=${MODULE_CACHE_DIR}" >> $GITHUB_ENV
          echo "CLANG_MODULE_CACHE_PATH=${MODULE_CACHE_DIR}" >> $GITHUB_ENV

      - name: Build (unsigned, Release)
        working-directory: ios
        env:
          MODULE_CACHE_DIR: ${{ env.MODULE_CACHE_DIR }}
          CLANG_MODULE_CACHE_PATH: ${{ env.CLANG_MODULE_CACHE_PATH }}
        run: |
          set -euo pipefail
          unset SWIFT_DEBUG_INFORMATION_FORMAT
          unset SWIFT_DEBUG_INFORMATION_VERSION
          mkdir -p ../build/DerivedData
          LINK_MAP_DIR="${RUNNER_TEMP:-/tmp}"
          LINK_MAP_PATH="${LINK_MAP_DIR}/link-map-${SDK}-build-$(date +%s).map"
          EXTRA_OTHER_LDFLAGS="-v -Xlinker -map -Xlinker ${LINK_MAP_PATH}"
          BASE_OTHER_LDFLAGS="${OTHER_LDFLAGS:-}"
          if [[ "${BASE_OTHER_LDFLAGS}" != *"\$(inherited)"* ]]; then
            if [ -n "${BASE_OTHER_LDFLAGS}" ]; then
              BASE_OTHER_LDFLAGS="\$(inherited) ${BASE_OTHER_LDFLAGS}"
            else
              BASE_OTHER_LDFLAGS="\$(inherited)"
            fi
          fi
          OTHER_LDFLAGS="${BASE_OTHER_LDFLAGS} ${EXTRA_OTHER_LDFLAGS}"
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk "$SDK" \
            -UseModernBuildSystem=YES \
            -derivedDataPath ../build/DerivedData \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            OTHER_LDFLAGS="$OTHER_LDFLAGS" \
            clean build | xcpretty && exit ${PIPESTATUS[0]}
        shell: bash

      - name: Remove temporary module cache
        if: env.MODULE_CACHE_DIR != ''
        run: |
          if [ -d "${MODULE_CACHE_DIR}" ]; then
            rm -rf "${MODULE_CACHE_DIR}"
          fi
        env:
          MODULE_CACHE_DIR: ${{ env.MODULE_CACHE_DIR }}

  ios-ipa:
    name: Archive & Export Unsigned IPA
    runs-on: macos-15
    needs: ios
    env:
      CODE_SIGNING_ALLOWED: "NO"
      CODE_SIGNING_REQUIRED: "NO"
      USE_FLIPPER: "0"
      WORKSPACE: monGARS.xcworkspace
      SCHEME: monGARS
      CONFIGURATION: Release
      SDK: iphoneos
      ARCHIVE_PATH: build/monGARS.xcarchive
      APP_NAME: monGARS
      DERIVED_DATA: ${{ github.workspace }}/build/DerivedData

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.4
        run: |
          sudo xcode-select -s "/Applications/Xcode_16.4.app/Contents/Developer"
          xcodebuild -version

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install JS deps
        run: npm ci

      - name: Set up Ruby (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install xcpretty
        run: |
          gem install xcpretty

      - name: Install XcodeGen
        run: |
          brew install xcodegen

      - name: Generate Xcode project (idempotent)
        run: |
          xcodegen generate || true

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods (fresh if lock changed)
        id: install_pods
        working-directory: ios
        run: |
          bundle exec pod deintegrate || true
          rm -rf Pods Podfile.lock
          bundle exec pod repo update
          bundle exec pod install --repo-update

      - name: Run iOS configuration verifiers
        uses: ./.github/actions/verify-ios-config

      - name: Upload CocoaPods artifacts
        if: steps.install_pods.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ios-pods-archive
          path: |
            ios/Pods
            ios/monGARS.xcworkspace
            ios/Podfile.lock
          if-no-files-found: error

      - name: Clean caches (global + repo-local) and set fresh module cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Caches/com.apple.dt.Xcode
          rm -rf build/DerivedData
          rm -rf build/DerivedData/ModuleCache.noindex
          rm -rf build/DerivedData/Build/Intermediates.noindex/ArchiveIntermediates
          rm -rf build/DerivedData/Build/Intermediates.noindex/PrecompiledHeaders
          MODULE_CACHE_DIR="$(mktemp -d)"
          echo "MODULE_CACHE_DIR=${MODULE_CACHE_DIR}" >> $GITHUB_ENV
          echo "CLANG_MODULE_CACHE_PATH=${MODULE_CACHE_DIR}" >> $GITHUB_ENV

      - name: Archive (unsigned)
        working-directory: ios
        env:
          MODULE_CACHE_DIR: ${{ env.MODULE_CACHE_DIR }}
          CLANG_MODULE_CACHE_PATH: ${{ env.CLANG_MODULE_CACHE_PATH }}
        run: |
          set -euo pipefail
          unset SWIFT_DEBUG_INFORMATION_FORMAT
          unset SWIFT_DEBUG_INFORMATION_VERSION
          mkdir -p ../build/DerivedData "$(dirname "$ARCHIVE_PATH")"
          LINK_MAP_DIR="${RUNNER_TEMP:-/tmp}"
          LINK_MAP_PATH="${LINK_MAP_DIR}/link-map-${SDK}-archive-$(date +%s).map"
          EXTRA_OTHER_LDFLAGS="-v -Xlinker -map -Xlinker ${LINK_MAP_PATH}"
          BASE_OTHER_LDFLAGS="${OTHER_LDFLAGS:-}"
          if [[ "${BASE_OTHER_LDFLAGS}" != *"\$(inherited)"* ]]; then
            if [ -n "${BASE_OTHER_LDFLAGS}" ]; then
              BASE_OTHER_LDFLAGS="\$(inherited) ${BASE_OTHER_LDFLAGS}"
            else
              BASE_OTHER_LDFLAGS="\$(inherited)"
            fi
          fi
          OTHER_LDFLAGS="${BASE_OTHER_LDFLAGS} ${EXTRA_OTHER_LDFLAGS}"
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk "$SDK" \
            -UseModernBuildSystem=YES \
            -derivedDataPath ../build/DerivedData \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            OTHER_LDFLAGS="$OTHER_LDFLAGS" \
            archive -archivePath "$ARCHIVE_PATH" | xcpretty && exit ${PIPESTATUS[0]}

      - name: Remove temporary module cache
        if: env.MODULE_CACHE_DIR != ''
        run: |
          if [ -d "${MODULE_CACHE_DIR}" ]; then
            rm -rf "${MODULE_CACHE_DIR}"
          fi
        env:
          MODULE_CACHE_DIR: ${{ env.MODULE_CACHE_DIR }}

      - name: Create unsigned IPA
        working-directory: ios
        run: |
          set -euo pipefail
          APP_DIR="$ARCHIVE_PATH/Products/Applications/${APP_NAME}.app"
          if [ ! -d "$APP_DIR" ]; then
            echo "App not found at $APP_DIR"
            ls -la "$ARCHIVE_PATH/Products/Applications" || true
            exit 2
          fi
          mkdir -p build/Payload
          rm -rf build/Payload/*
          cp -R "$APP_DIR" build/Payload/
          (cd build && zip -r "${APP_NAME}-unsigned.ipa" Payload >/dev/null)
          echo "IPA created: ios/build/${APP_NAME}-unsigned.ipa"

      - name: Upload IPA & Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ env.APP_NAME }}-artifacts
          path: |
            ios/build/${{ env.APP_NAME }}-unsigned.ipa
            ios/build/${{ env.APP_NAME }}.xcarchive
          if-no-files-found: error
