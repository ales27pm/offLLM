name: CI

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  js-ci:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max_old_space_size=4096

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
          cache: npm

      - name: Install deps from lockfile
        run: npm ci

      - name: Generate Turbo headers (no-op if none)
        run: |
          set -euo pipefail
          export CODEGEN_OUTPUT_DIR="${CODEGEN_OUTPUT_DIR:-$(pwd)/ios/build/generated}"
          export TEMPLATE_SRC_DIR="${TEMPLATE_SRC_DIR:-$(pwd)/src/specs}"
          npm run codegen

      - name: Format check
        run: npm run format:check

      - name: Unit tests
        run: npm run test:ci

      - name: Run ESLint (no warnings allowed)
        run: npm run lint:ci

  ios-ci:
    runs-on: macos-14
    env:
      NODE_OPTIONS: --max_old_space_size=4096

    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Verify Xcode is >= 16.1
        run: |
          VER=$(xcodebuild -version | awk '/Xcode/ {print $2}')
          echo "Selected Xcode: $VER"
          case "$VER" in
            16.*) echo "✅ OK";;
            *) echo "❌ Wrong Xcode version, requires 16.x"; exit 1;;
          esac

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
          cache: npm

      - name: Install JS deps from lockfile
        run: npm ci

      # ✅ FIXED: working-directory only valid in run steps
      - name: Setup Ruby (Bundler cache from ios/Gemfile.lock)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
        env:
          BUNDLE_GEMFILE: ios/Gemfile

      - name: Update CocoaPods repo
        run: pod repo update

      - name: Install CocoaPods
        run: |
          cd ios
          bundle exec pod install --repo-update

      - name: Apply hardening scripts
        run: |
          cd ios
          bundle exec ruby ../scripts/ci/strip_hermes_phase.rb
          bundle exec ruby ../scripts/ci/enforce_pods_deployment_target.rb
          if grep -Riq --include=project.pbxproj "Replace Hermes" Pods MyOfflineLLMApp.xcodeproj; then
            echo "::error::Hermes 'Replace Hermes' phase still present after scrub"
            exit 1
          fi

      - name: Set Swift Optimization Level for Debug
        run: |
          cd ios
          xcrun xcodebuild \
            -workspace MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Debug \
            SWIFT_OPTIMIZATION_LEVEL=-Onone

      - name: Clean and Build (Simulator)
        run: |
          cd ios
          set -euo pipefail
          xcodebuild clean \
            -workspace MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Debug
          xcodebuild \
            -workspace MyOfflineLLMApp.xcworkspace \
            -scheme MyOfflineLLMApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.2' \
            build | tee ../build/xcodebuild.log
