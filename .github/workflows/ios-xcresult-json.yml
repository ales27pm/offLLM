name: iOS Build â†’ xcresult JSON

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  ios:
    # Use a runner image that has Xcode 16 available
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ðŸ”§ Select Xcode 16.x BEFORE pods/codegen
      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'   # or '16.1' / '16.3' as needed

      - name: Verify Xcode toolchain
        shell: bash
        run: |
          set -euo pipefail
          xcodebuild -version
          # Make sure DEVELOPER_DIR points to the selected Xcode
          echo "DEVELOPER_DIR=${DEVELOPER_DIR:-not-set}"

      - name: Setup Node (for RN codegen)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install JS deps
        run: npm ci

      - name: Setup Ruby & CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"

      - name: Install CocoaPods & xcpretty
        shell: bash
        run: |
          set -euo pipefail
          gem install cocoapods -N
          gem install xcpretty -N
          pod --version

      # Ensure the Xcode project exists before Pods (XcodeGen/Tuist)
      - name: Ensure iOS project exists (.xcodeproj)
        shell: bash
        run: |
          set -euo pipefail
          ls -la ios || true

          if [ -f "ios/MyOfflineLLMApp/project.yml" ]; then
            echo "â†’ Generating project with XcodeGen"
            brew install xcodegen || true
            (cd ios/MyOfflineLLMApp && xcodegen generate)
          elif [ -f "ios/Project.swift" ] || [ -d "ios/Tuist" ]; then
            echo "â†’ Generating project with Tuist"
            curl -Ls https://install.tuist.io | bash
            (cd ios && ~/.tuist/bin/tuist generate)
          fi

          echo "Looking for .xcodeproj:"
          find ios -maxdepth 3 -name "*.xcodeproj" -print
          if ! find ios -maxdepth 3 -name "*.xcodeproj" | grep -q . ; then
            echo "::error::No .xcodeproj found near Podfile. Generate it before 'pod install'."
            exit 1
          fi

      - name: Install CocoaPods (after project exists)
        shell: bash
        run: |
          set -euo pipefail
          cd ios
          pod repo update
          pod install --repo-update
          cd -
          find ios -maxdepth 3 -name "*.xcworkspace" -print

      - name: Xcode & Simulator diagnostics
        shell: bash
        run: |
          set -euo pipefail
          xcrun simctl list devices | head -n 50

      - name: Build (Simulator) and export .xcresult
        shell: bash
        env:
          SCHEME: MyOfflineLLMApp
          WORKSPACE: ios/MyOfflineLLMApp.xcworkspace
          CONFIGURATION: Debug
          SDK: iphonesimulator
          DESTINATION: "platform=iOS Simulator,name=iPhone 15"
          RESULT_BUNDLE: ${{ runner.temp }}/MyOfflineLLMApp.xcresult
          RESULT_JSON: ${{ runner.temp }}/MyOfflineLLMApp.xcresult.json
        run: |
          set -euo pipefail

          echo "â†’ xcodebuild (workspace: $WORKSPACE, scheme: $SCHEME)"
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk "$SDK" \
            -destination "$DESTINATION" \
            -resultBundlePath "$RESULT_BUNDLE" \
            -showBuildTimingSummary \
            build | xcpretty || true

          echo "â†’ Convert .xcresult to JSON with xcresulttool"
          /usr/bin/xcrun xcresulttool get \
            --format json \
            --path "$RESULT_BUNDLE" \
            > "$RESULT_JSON"

          echo "Result bundle: $RESULT_BUNDLE"
          echo "Result JSON:   $RESULT_JSON"

      - name: Upload .xcresult bundle
        uses: actions/upload-artifact@v4
        with:
          name: MyOfflineLLMApp-xcresult
          path: ${{ runner.temp }}/MyOfflineLLMApp.xcresult

      - name: Upload xcresult JSON
        uses: actions/upload-artifact@v4
        with:
          name: MyOfflineLLMApp-xcresult.json
          path: ${{ runner.temp }}/MyOfflineLLMApp.xcresult.json
